[{"content":"Git概述 Git 诞生于一个极富纷争大举创新的年代。Linux 内核开源项目有着为数众多的参与者。 绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上（1991－2002年间）。 到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统BitKeeper来管理和维护代码。\n到了 2005 年，开发BitKeeper的商业公司同Linux内核开源社区的合作关系结束，他们收回了Linux内核社区免费使用BitKeeper的权力。 这就迫使Linux开源社区（特别是Linux的缔造者Linus Torvalds）基于使用BitKeeper时的经验教训，开发出自己的版本系统。他们对新的系统制订了若干目标：\n高速、简单 对非线性开发模式的强力支持（允许成千上万个并行开发的分支） 完全分布式 有能力高效管理类似Linux内核一样的超大规模项目（速度和数据量） 集中式版本控制系统 vs 分布式版本控制系统\n集中式版本控制系统，例如SVN，版本库是集中放在中央服务器的，而开发人员工作的时候，用的都是自己的电脑，所以首先要从中央服务器下载最新的版本，然后开发，开发完后，需要把自己开发的代码提交到中央服务器。集中式版本控制工具 的缺点：服务器单点故障问题、容错性较差。\n分布式版本控制系统（Distributed Version Control System，简称 DVCS） ，例如免费开源的Git。分为两种类型的仓库：本地仓库和远程仓库。对比SVN集中式版本控制系统，分布式不受网络环境的限制。本地仓库：是在开发人员自己电脑上的Git仓库；远程仓库：是在远程服务器上的Git仓库\nGit与SVN的区别：\nGit 是分布式的，SVN 不是：这是 Git 和其它非分布式的版本控制系统，例如 SVN，CVS 等，最核心的区别。\nGit 把内容按元数据方式存储，而 SVN 是按文件：所有的资源控制系统都是把文件的元信息隐藏在一个类似 .svn、.cvs 等的文件夹里。\nGit 分支和 SVN 的分支不同：分支在 SVN 中一点都不特别，其实它就是版本库中的另外一个目录。\nGit 没有一个全局的版本号，而 SVN 有：目前为止这是跟 SVN 相比 Git 缺少的最大的一个特征。\nGit 的内容完整性要优于 SVN：Git 的内容存储使用的是 SHA-1 哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。\nGit代码托管服务：Git中存在两种类型的仓库，即本地仓库和远程仓库。那么如何搭建Git远程仓库呢？我们可以借助一些代码托管服务来实现，其中比较常用的有GitHub、Gitee、GitLab等。\ngitHub（ 地址： https://github.com/ ）是一个面向开源及私有软件项目的托管平台，因为只支持Git 作为唯一的版本库格式进行托管，故名gitHub。\n码云（地址： https://gitee.com/ ）是国内的一个代码托管平台，由于服务器在国内，所以相比于GitHub，码云速度会更快。\nGitLab （地址： https://about.gitlab.com/ ）是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务。\nGit的基本使用 git工作区、暂存区和版本库 工作区：工作区是你在本地计算机上的项目目录，你在这里进行文件的创建、修改和删除操作。工作区包含了当前项目的所有文件和子目录。\n暂存区：英文叫 stage 或 index。一般存放在 .git 目录下的 index 文件（.git/index）中，所以我们把暂存区有时也叫作**索引*（index）。暂存区是一个临时存储区域，它包含了即将被提交到版本库中的文件快照，在提交之前，你可以选择性地将工作区中的修改添加到暂存区。\n工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。版本库包含项目的所有版本历史记录。每次提交都会在版本库中创建一个新的快照，这些快照是不可变的，确保了项目的完整历史记录。版本库分为本地版本库和远程版本库。这里主要指本地版本库。\n图中左侧为工作区，右侧为版本库。在版本库中标记为 \u0026ldquo;index\u0026rdquo; 的区域是暂存区（stage/index），标记为 \u0026ldquo;master\u0026rdquo; 的是 master分支所代表的目录树。 \u0026ldquo;HEAD\u0026rdquo; 实际是指向 master 分支的一个\u0026quot;游标/指针\u0026quot;。所以图示的命令中出现HEAD的地方可以用master来替换。 图中的objects标识的区域为Git的对象库，实际位于\u0026quot;.git/objects\u0026quot;目录下，里面包含了创建的各种对象及内容。 当对工作区修改（或新增）的文件执行 git add 命令时，暂存区的目录树被更新，同时工作区修改（或新增）的文件内容被写入到对象库中的一个新的对象中，而该对象的ID被记录在暂存区的文件索引中。 当执行提交操作git commit时，暂存区的目录树写到版本库（对象库）中，master 分支会做相应的更新。即master指向的目录树就是提交时暂存区的目录树。 当执行git reset HEAD命令时，暂存区的目录树会被重写，被master分支指向的目录树所替换，但是工作区不受影响。 当执行git rm \u0026ndash;cached filename命令时，会直接从暂存区删除文件，工作区则不做出改变。 当执行git checkout . 或者git checkout \u0026ndash; filename命令时，会用暂存区全部或指定的文件替换工作区的文件。这个操作很危险，会清除工作区中未添加到暂存区中的改动。 当执行 git checkout HEAD . 或者 git checkout HEAD filename 命令时，会用HEAD指向的master分支中的全部或者部分文件替换暂存区和以及工作区中的文件。这个命令也是极具危险性的，因为不但会清除工作区中未提交的改动，也会清除暂存区中未提交的改动。 git常用的基本操作命令 git clone：将远程仓库中内容克隆到本地（可以ssh或http）。默认会自动创建一个名为orgin的远程仓库；并在本地仓库生成一个默认的主干分支，自动追踪远程origin/main。\n注意：远程仓库的默认名称是origin（在.git下的config文件中可以更改）\n更改远程的默认仓库名：修改config文件\ngit log：查看git日志\ngit branch：查看本地当前分支\n-r：查看远程分支\n-a：同时查看本地分支和远程分支\n-vv：查看分支追踪关系\ngit status：查看当前状态\ngit add filename或.：将工作区的代码改动（某个文件或全部内容），提交到暂存区中\ngit commit -m “说明内容”：将暂存区的改动提交到本地仓库的代码分支（当前是main分支）\n此时本地仓库分支新于远程仓库分支\ngit push origin main:main：（前面一个是本地分支，后面一个是远程分支，两者相同，可以省略一个）：将本地仓库分支的内容推送到远程仓库中\n查看此时日志信息\ngit pull：拉取远程仓库中的分支，经常git pull是一个好习惯\nHEAD指针：本地仓库每一个分支上的代码修改都会生成一个commit id信息，HEAD指针指向最近一次的commit提交，通过这个commit id可以进行版本回退\n整个流程：\ngit各阶段版本回退命令 工作区的修改没有add：比如修改main.txt后不想修改了：git checkout -- main.txt或.（用本地仓库/分支的内容覆盖当前工作区的内容）\n已经将工作区的改动add到暂存区：git reset HEAD（取消暂存区的修改，但文件内容的改动还在）\n已经将暂存区的改动commit到本地仓库：git reset --hard commit-ID（本质是移动了HEAD指针）\n​\t此时的状态，回退成功（但此时工作区的修改已经不存在了）\ngit reflog：可以查看HEAD指针的改动日志，并返回原状态，还是用git reset --hard commit-ID命令\n状态还原（打出commit-ID前几位即可）：\n回退已经提交到远程仓库的内容\n先回退本地仓库，再强制更新远程仓库：重新走一遍流程后再push到远程仓库（本地仓库版本落后于远程仓库版本会push失败，更新才会push成功） 需要用git push -f origin main（-f强制推送） git diff HEAD -- main.txt：查看工作区文件和仓库中该文件最新版本代码有何区别 团队中代码提交冲突的解决方案 团队开发中常见场景：\n小张此时push会冲突：\n如果可以自动合并（两人修改的位置不同）：此时需要先git pull，会自动合并阿亮的代码。然后在小张再push一次即可成功\n如果不能自动合并（两人修改的位置有冲突）：小张git pull，但自动合并会冲突（此时需要手动解决冲突）\ngit会帮助生成冲突的辅助信息\n手动解决冲突后，此时可以add、commit和push\ngit分支版本控制命令 本地分支管理 开发人员应该在本地多建立分支，在新分支上开发，再合并到指定的代码仓库中\n创建并切换分支：git checkout -b newbranch\n但此时没有追踪关系，无法git pull\n切换分支命令：git checkout main\n此时修改main.txt文件，但push会失败\n需要在main分支将newbranch分支合并过来（直接合并到本地仓库）：git merge newbranch\n此时push才可以成功\n此时可以删除newbranch分支（只有merge合并到main分支-d才能删除成功）：git branch -d newbranch（-D 强制删除）\n（另一种方案）直接从new分支(sortdev)推送到远端master分支\n合并分支冲突 上一小节把newbranch分支合并到main分支上时一切顺利，是因为newbranch分支在合并的时候，main分支没有做过任何改动\n实际上有可能发生这样的情况： 啊亮从master分支创建了一个新的分支sortdev01，进行代码开发测试，提交\n小张更新了master分支上的代码\n啊亮切换分支到master，git pull同步远程仓库master主干的最新代码，发现有变化\n啊亮直接git merge sortdev01就发生冲突了（无法合并）\n冲突如下：只能手动修改\n此时小张回到main分支做merge会冲突（自动合并失败，修改位置冲突）——只能手动解决\n查看冲突内容\n手动解决冲突后，再add，commit和push，成功\n远程分支管理 在github上创建一个代码仓库，默认就拉了一个master主干分支，在master主干分支上开发了一期项目以后，再进行二期开发的时候，可以再拉一个dev分支出来，大家都在dev分支上开发，此时项目管理员可以把master分支的写权限关掉，因为一期功能开发验证完成，很稳定，此时可以拉取master代码，不能再push推送代码到master分支。\n一般远程分支的创建都是由项目管理员来创建的，其它员工没有创建远程分支的权限，而且每一个远程分支的读写权限也都是由管理员来控制的。\n创建远程分支（管理员才有权限），在这个新分支上开发新的功能，此时老分支不能再修改\n此时pull会到新的开发分支上\n追踪关系如下：\n需要创建一个本地分支（最好和远端的新分支名称相同）：git checkout -b dev01（此时没有任何追踪关系）\n创建本地分支并添加追踪关系：git checkout -b dev01 origin/dev01\npush到远端dev01分支上\n设置已经存在的本地分支追踪哪个远程分支：git branch -u \u0026lt;远程仓库名\u0026gt;/\u0026lt;远程分支名\u0026gt;\ngitignore gitignore忽略某些文件的版本跟踪，指有意忽略的未跟踪文件。\n在项目中，并不是所有文件都要保存到版本库中，如日志文件、临时文件及工具生成的文件等。\n注意：未跟踪，指的是之前没有被添加到版本库。否则这种用法是无效的。\n使用方法： 在项目根目录创建.gitignore文件 用文本编辑器打开文件，进行配置——每项配置独占一行；每行的内容可以是：文件/目录的名称、路径或它们的模式匹配（regex） gitignore的匹配模式 空行不匹配任何文件，因此常用作分隔符（以方便阅读）\n#用于注释，\\表示转义（如需使用实体\\，则要加引号\u0026quot;\\”）\n*可以匹配任何字符（0或多次），？可以匹配任何字符（1次）（注意：它们都不可以匹配/）\n/用于分隔目录\n当/在开头时，表示从.gitignore文件所在目录开始匹配。否则，下级都将匹配\n当/在末尾时，只匹配目录，否则，则同名的目录和文件都将匹配\n原先被排除的文件，使用!模式后该文件将会重新被包含。但如果了该文件的父级目录被排除了，那么使用!也不会再次被包含\n[]通常用于匹配一个字符列表，如：a[mn]z可匹配amz和anz\n**用于匹配多级目录，如a/**/b可匹配\u0026quot;a/b\u0026quot;，\u0026ldquo;a/x/b\u0026rdquo;，\u0026ldquo;a/x/y/b\u0026quot;等\n举例 忽略所有内容：* 忽略所有目录：*/ 忽略public目录下的所有内容，不包括favicon.ico文件： public/*#不能把目录本身也排除了 !public/favicon.ico 检查自己写的ignore规则是否有效：git check-ignore -v {文件或目录路径}——有输出证明被忽略\n.gitignore只能忽略那些没有被追踪的文件，所以先纳入版本管理后写入.gitignore是无效的\n解决方案：先删除本地缓存，之后再加入\n1 2 3 git rm x-r --cached . git add. git status 企业开发中Git的工作流 项目代码远程仓库的分支：master主干分支 dev开发分支 release发布分支\n个人开发分支：feature特性分支 bugfix缺陷修改分支 hotfix热更新分支（旧的发表分支出现问题）\n一般git的工作流程如下（例如dev开发阶段，其他阶段同理）：\n创建个人本地开发分支：git checkout-b feature/add_new_line origin/dev\n随时git pull：比较好的习惯，保证本地分支和远程分支的最新代码保持同步\n在本地分支feature/add_new_line上开发代码（add/commit），随时git pull（开发过程中可能有其他人提交）\n个人本地分支推送到远程分支：git push origin feature/add_new_line:feature/add_new_line_v1.0（会在远程代码仓库中新建一个feature/add_new_line_v1.0分支）\n提交个人远程代码分支和目标代码合入分支的MR（合并请求），相关负责人进行CR（Code Review）代码评审（代码评审工具：gitlab/gerrit）\n相关负责人提出意见，本地修改相应的代码，推送到对应的远程代码分支上（git pull，如果有冲突手动解决）\n代码CR意见处理完，相关负责人进行代码merge合并，代码修改从feature/add_new_line_v1.0合入dev分支完成\n删除个人远程代码分支：git push origin [空格]:feature/add_new_line_v1.0\n","date":"2024-12-01T00:00:00Z","image":"https://dirvema.github.io/p/gitthe-best-distributed-version-control-system/cinque-terre-4520509_hu8868733438827444304.jpg","permalink":"https://dirvema.github.io/p/gitthe-best-distributed-version-control-system/","title":"Git：The best distributed version control system"},{"content":"Markdowm与Typora 一句话概括：Markdown是一种语言，Tytora是翻译和编辑Markdown的软件\nMarkdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出HTML、PDF以及本身的 .md格式的文件。因简洁、高效、易读、易写，Markdown被大量使用，如Github、Wikipedia、简书等。\nTypora是一款由Abner Lee开发的轻量级Markdown编辑器，适用于OS、Windows和Linux三种操作系统，是一款免费软件。与其他Markdown编辑器不同的是，Typora没有采用源代码和预览双栏显示的方式，而是采用所见即所得的编辑方式，实现了即时预览的功能，但也可切换至源代码编辑模式。并且可以导出为PDF、HTML、Word、图像等多种格式。\n基础 标题 要创建标题，请在单词或短语前面添加井号 (#)和一个空格 。# 的数量代表了标题的级别。例如，添加三个 # 表示创建一个三级标题 (\u0026lt;h3\u0026gt;) (例如：### My Header)。\n快捷键：Ctrl+数字 (1、2、3、4、5、6) ，一共六个数字代表由大到小六个标题等级。Ctrl+0则代表普通正文文本。Ctrl+加号/减号可以对标题级别进行加减。\n转义字符 \\符号代表转义字符，可防止以下字符的含义生效。\n分割线 三个+++、***表示一道分割线。效果：\n字体修饰 粗体：一对**包裹，快捷键Ctrl+B，效果粗体 删除线：一对~~包裹，快捷键Shift+Alt+5，效果删除线 下划线：一对u标签包裹，快捷键Ctrl+U，效果下划线 斜体：一对*包裹，快捷键Ctrl+I，效果斜体 高亮：一对==或\u0026lt;mark\u0026gt;\\标签包裹，效果高亮 1 2 3 4 5 **粗体** ~~删除线~~ \u0026lt;u\u0026gt;下划线\u0026lt;/u\u0026gt; *斜体* \u0026lt;mark\u0026gt;高亮\u0026lt;/mark\u0026gt; 上下标 上标：一对^包裹，效果x^2^ 下标：一对~包裹，效果H2O 1 2 x^2^ H~2~O 列表 无序列表：只有同一级别：*或-或+ 加上空格；子集类：一级列表回车后加一个Tab键 快捷键：Ctrl+Shift+]、Ctrl+[代表降低一个级别、Ctrl+]代表升高一个级别 效果（一级） 效果（二级） 三级（三级） 1 */-/+ 加 空格键 有序列表：数字加.加空格 快捷键：Ctrl+Shift+[ 第一个标题 第二个标题 1 数字. 加 空格键 任务列表：无序列表输入方式加[] 吃饭 睡觉 1 2 - [ ] 吃饭 - [×] 睡觉 区块显示 退出区块按两次回车键\n1 \u0026gt;加回车键/空格键 外层区块\n内层区块\n代码显示 行内代码：\n效果：int a = 0;\n快捷键：Ctrl+Shift+`\n1 ` int a = 0; ` //`位于ESC键下面 代码块：\n使用```加语言类型（可选）\n快捷键：Ctrl+Shift+K\n1 2 3 4 5 ``` 内容 #include\u0026lt;iostream\u0026gt; using namespace std; int a = 0; cout \u0026lt;\u0026lt; endl;//输出 链接 快捷键：Ctrl+K\n1 2 3 www.baidu.com//直接是网址，Ctrl点击可访问 [百度一下](www.baidu.com)//显示网址的别名 [百度一下](www.baidu.com \u0026#34;https://www.baidu.com\u0026#34;)//鼠标放上去有提示 www.baidu.com\n百度一下\n百度一下\n可以链接到本文的某个标题并进行跳转，注意：此处井号和标题名之间没有空格键\n标题\n1 [标题](##标题) 脚注 Markdown1语言很常用\n1 2 [^文本] [^文本]:解释说明 多行脚注之间用\u0026lt;br\u0026gt;分隔开，偏好设置中可以隐藏\u0026lt;br\u0026gt;的显示\n图片插入 快捷键：Ctrl+Shift+I\n在代码最后加align=\u0026ldquo;left\u0026quot;代表左对齐，右对齐同理，默认是居中对齐\n1 ![不显示的文字](图片路径 \u0026#34;图片标题\u0026#34;) 在hugo博客中的语法\n1 2 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) \u0026lt;img src=\u0026#34;2.jpg\u0026#34; alt=\u0026#34;Photo by Florian Klauer on Unsplash\u0026#34; style=\u0026#34;margin: auto; display: block; zoom: 33%;\u0026#34;/\u0026gt; //display: block代表居中对齐 表格插入 快捷键：Ctrl+T；在表中可以修改表的一些格式；按Tab键可以跳到右一个单元格，Enter键可以跳到下一个单元格\nTable a b c 目录 在文档最上面输入[TOC]文档可帮助自动生成目录。\nMarkdown是一种轻量级标记语言\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2024-11-12T00:00:00Z","image":"https://dirvema.github.io/p/markdowntypora/1_hu9483040002024429900.jpg","permalink":"https://dirvema.github.io/p/markdowntypora/","title":"Markdown\u0026\u0026Typora"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2024-11-11T00:00:00Z","image":"https://dirvema.github.io/p/io-multiplexingselectepoll%E6%9C%AA%E5%86%99/1_hu17337117646402622991.jpg","permalink":"https://dirvema.github.io/p/io-multiplexingselectepoll%E6%9C%AA%E5%86%99/","title":"IO multiplexing：Select\u0026\u0026Epoll（未写）"},{"content":"Markdowm基本语法 Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出HTML、PDF以及本身的 .md 格式的文件。因简洁、高效、易读、易写，Markdown被大量使用，如Github、Wikipedia、简书等。\n千万不要被「标记」、「语言」吓到，Markdown的语法十分简单，常用的标记符号不超过十个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。\n就是这十个不到的标记符号，却能让人优雅地沉浸式记录，专注内容而不是纠结排版，达到「心中无尘，码字入神」的境界。\nMarkdown 标题语法 要创建标题，请在单词或短语前面添加井号 (#) 。# 的数量代表了标题的级别。例如，添加三个 # 表示创建一个三级标题 (\u0026lt;h3\u0026gt;) (例如：### My Header)。\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2024-01-05T00:00:00Z","image":"https://dirvema.github.io/p/workflow%E6%9C%AA%E5%86%99/1_hu10042572630848752936.jpg","permalink":"https://dirvema.github.io/p/workflow%E6%9C%AA%E5%86%99/","title":"WorkFlow(未写)"},{"content":"Unix和Linux 引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2024-01-02T00:00:00Z","image":"https://dirvema.github.io/p/test-chinese/17_hu14577221846008248717.jpg","permalink":"https://dirvema.github.io/p/test-chinese/","title":"History of Computer/Programing(未写)"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://dirvema.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"https://dirvema.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://dirvema.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://dirvema.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu5876398126655421130.jpg","permalink":"https://dirvema.github.io/p/emoji-support/","title":"Emoji Support"}]